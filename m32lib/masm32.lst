Microsoft (R) Macro Assembler Version 14.00.23506.0	    04/01/16 14:57:15
xordata.asm						     Page 1 - 1


				; #########################################################################

				    .486                      ; create 32 bit code
				    .model flat, stdcall      ; 32 bit memory model
				    option casemap :none      ; case sensitive

 00000000			    .code

				; ###########################################################################

 00000000			XorData proc lpSource:DWORD,ln:DWORD,lpKey:DWORD,lnKey:DWORD

				    LOCAL lref :DWORD   ; counter reference for key char position
				    LOCAL pcnt :DWORD
				    LOCAL bvar :BYTE

 00000006  53			    push ebx
 00000007  56			    push esi
 00000008  57			    push edi

 00000009  8B 45 10		    mov eax, lpKey
 0000000C  89 45 F8		    mov pcnt, eax
 0000000F  03 45 14		    add eax, lnKey
 00000012  89 45 FC		    mov lref, eax

 00000015  8B 75 10		    mov esi, lpKey
 00000018  8A 06		    mov al,[esi]
 0000001A  88 45 F7		    mov bvar, al        ; put 1st byte in bvar

 0000001D  8B 4D 0C		    mov ecx, ln
 00000020  8B 75 08		    mov esi, lpSource
 00000023  8B 7D 08		    mov edi, lpSource

 00000026			  xsSt:
 00000026  8A 06		    mov al,[esi]        ; copy 1st byte of source into al
 00000028  46			    inc esi

 00000029  32 45 F7		    xor al, bvar        ; xor al with next byte in bvar

				  ; ====== This code gets the next byte in the key string ======
				  ;        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 0000002C  50			    push eax
 0000002D  56			    push esi

 0000002E  FF 45 F8		    inc pcnt            ; increment byte address
 00000031  8B 75 F8		    mov esi, pcnt       ; put it in esi
 00000034  8A 06		    mov al,[esi]
 00000036  46			    inc esi

 00000037  8B 5D FC		    mov ebx, lref
 0000003A  39 5D F8		    cmp pcnt, ebx
 0000003D  75 0C		    jne @F

 0000003F  8B 55 10		    mov edx, lpKey      ; put key start address in edx
 00000042  89 55 F8		    mov pcnt, edx       ; reset pcnt to original address
 00000045  8B 75 F8		    mov esi, pcnt       ; put original address in esi

 00000048  8A 06		    mov al,[esi]
 0000004A  46			    inc esi

 0000004B			  @@:
 0000004B  88 45 F7		    mov bvar, al

 0000004E  5E			    pop esi
 0000004F  58			    pop eax
				  ; ============================================================

 00000050  88 07		    mov [edi], al
 00000052  47			    inc edi
 00000053  49			    dec ecx

 00000054  83 F9 00		    cmp ecx, 0
 00000057  75 CD		    jne xsSt

 00000059  5F			    pop edi
 0000005A  5E			    pop esi
 0000005B  5B			    pop ebx

				    ret

 00000060			XorData endp

				; ###########################################################################

				    end
Microsoft (R) Macro Assembler Version 14.00.23506.0	    04/01/16 14:57:15
xordata.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000060 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

XorData  . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000060 Public STDCALL
  lpSource . . . . . . . . . . .	DWord	 bp + 00000008
  ln . . . . . . . . . . . . . .	DWord	 bp + 0000000C
  lpKey  . . . . . . . . . . . .	DWord	 bp + 00000010
  lnKey  . . . . . . . . . . . .	DWord	 bp + 00000014
  lref . . . . . . . . . . . . .	DWord	 bp - 00000004
  pcnt . . . . . . . . . . . . .	DWord	 bp - 00000008
  bvar . . . . . . . . . . . . .	Byte	 bp - 00000009
  xsSt . . . . . . . . . . . . .	L Near	 00000026 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT

	   0 Warnings
	   0 Errors
